import os
import requests

# The tool configuration with Assistants Builder Assistant ID
tool_config = {
    "type": "function",
    "function": {
        "name": "run_assistant",
        "description":
        "Triggers the assistant to process the latest messages in a thread and generate a response.",
        "parameters": {
            "type": "object",
            "properties": {
                "thread_id": {
                    "type":
                    "string",
                    "description":
                    "The unique identifier of the thread on which the assistant will be run."
                },
                "assistant_id": {
                    "type":
                    "string",
                    "description":
                    "The unique identifier of the assistant that will be processing the thread."
                }
            },
            "required": ["thread_id", "assistant_id"]
        },
        "assistant_id":
        "asst_azHS6bnqbwP1kvbTtchEgU7A"  # Include the Assistants Builder Assistant ID here
    }
}


# The callback function (Triggers the assistant to process the latest messages in a thread and generate a response)
def run_assistant(arguments):
  """
    Triggers the assistant to process the latest messages in a thread and generate a response.

    :param arguments: dict, Contains the necessary information for running the assistant on a thread.
                     Expected keys: thread_id, assistant_id.
    :return: dict or str, Response generated by the assistant or error message.
    """
  # Extracting information from arguments
  thread_id = arguments.get('thread_id')
  assistant_id = arguments.get('assistant_id')

  # Validating the presence of required information
  if not all([thread_id, assistant_id]):
    return "Missing required information. Please provide the thread ID and assistant ID."

  # Implement the logic to trigger the assistant to process the latest messages in the specified thread
  # Example:
  # response = trigger_assistant(thread_id, assistant_id)

  # Placeholder response for demonstration purposes
  assistant_response = {
      "thread_id": thread_id,
      "assistant_id": assistant_id,
      "response": "This is a response generated by the assistant."
  }

  return assistant_response
